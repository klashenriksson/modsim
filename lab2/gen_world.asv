function world = gen_world(num_countries, gamma_countries, gamma_cities)
    country_adj_mat = gen_network(num_countries, gamma_countries);
    country_graph = graph(country_adj_mat);
    total_connections = numedges(country_graph);
    
    world.cntry_graph = country_graph;
    world.city_nets = cell(num_countries, 1);

    deg_factor = 10;

    num_cntries = country_graph.numnodes;
    degs = degree(country_graph);

    total_nodes = 0;
    max_city_count = 0;
    for n = 1:num_cntries
        num_cities = degs(n)*deg_factor;
        max_city_count = max(num_cities, max_city_count);

        city_net = gen_network(num_cities, gamma_cities);
        city_graph = graph(city_net);
        total_connections = total_connections + numedges(city_graph);
        total_nodes = total_nodes + num_cities;

        world.city_nets(n) = {city_graph};
    end

    %recombine
    world_edges = zeros(total_connections,2);
    world_nodes = zeros(total_nodes,1);
    country_offset = 0;
    edge_index = 1;
    for n = 1:num_cntries
        city_net = world.city_nets(n);
        city_net = city_net{1};
        edges = city_net.Edges;
        edge_count = size(edges, 1);
        num_nodes = city_net.numnodes;
        for edge = 1:edge_count
            node1 = edges.EndNodes(edge,1);
            node2 = edges.EndNodes(edge,2);

            n1_id = node1 + country_offset;
            n2_id = node2 + country_offset;

            world_edges(edge_index,:) = [n1_id,n2_id];
            edge_index = edge_index + 1;
        end
        country_offset = country_offset + num_nodes;
    end

    % connect the largest cities
    for n = 1:num_cntries
        cntry_edges = world.cntry_graph.Edges.EndNodes;
        edge_count = size(cntry_edges, 1);
        for edge = 1:edge_count
            city_net_1 = world.city_nets(edge(1));
            city_net_1 = city_net_1{1};
            city_net_2 = world.city_nets(edge(2));
            city_net_2 = city_net_2{1};

            biggst_node_city_1 = max(degree(city_net_1));
        end
    end

    weights = ones(size(world_edges,1),1);

    edge_table = table(world_edges, weights, 'VariableNames', {'EndNodes', 'Weight'});
    world_graph = graph(edge_table);
    figure;
    plot(world_graph);
end
